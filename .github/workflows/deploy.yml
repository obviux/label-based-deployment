name: Deploy

on:
  release:
    types: [released]

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Extract list of labels designating the release type
      - name: Get release type
        id: release_type
        run: |
          pr_count=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/$GITHUB_REPOSITORY/pulls?state=all | jq length)

          for ((i=0; i<$pr_count; i++)); do
            echo "Processing element $i"
            output=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/$GITHUB_REPOSITORY/pulls?state=all)
            commit_sha=$(echo $output | jq -r ".[$i].merge_commit_sha")
            echo $commit_sha
            echo ${{github.event.release.target_commitish}}
            if [[ $commit_sha == "${{github.event.release.target_commitish}}" ]]; then
              echo "here it is! i is $i" 
              pr_idx=$i
              break
            fi
          done

          label_list_string=$(echo $output | jq ".[$pr_idx].labels[].name")

          if echo "$label_list_string" | grep -q '"app"'; then
              echo "is_app_release=true" >> $GITHUB_OUTPUT
          fi

          if echo "$label_list_string" | grep -q '"terraform"'; then
              echo "is_terraform_release=true" >> $GITHUB_OUTPUT
          fi

        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #                echo $(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/$GITHUB_REPOSITORY/pulls?state=all | jq '.[$i].merge_commit_sha')
          # gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/$GITHUB_REPOSITORY/pulls?state=all | jq '.[] | select(.merge_commit_sha==${{github.event.release.target_commitish}})'
          # gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/$GITHUB_REPOSITORY/pulls?state=all | jq '.[] | select(.merge_commit_sha == "${{github.event.release.target_commitish}}") | .labels[].name'
          # label_list_string=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/$GITHUB_REPOSITORY/pulls?state=all | jq '.[0].labels[].name')

      # Deploying/analyzing depending on release type
      - name: Deploy Terraform
        if: steps.release_type.outputs.is_terraform_release == 'true'
        run: echo "Deploying Terraform..."
      
      - name: Deploy app
        if: steps.release_type.outputs.is_app_release == 'true'
        run: echo "Deploying app..."

