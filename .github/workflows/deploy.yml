name: Deploy

on:
  release:
    types: [released]

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    outputs:
      is_terragrunt_release: ${{ steps.extract_release_type.outputs.has_terraform_label == 'true' }}
      is_app_release: ${{ steps.extract_release_type.outputs.has_app_label == 'true' }}
    steps:
      # - name: Checkout code
      #   uses: actions/checkout@v2

      # Gets a JSON like {desire_labels[0]: <true/false>, ...}
      - uses: obviux/get_pr_labels@v1.0.5
        id: get_release_type
        with:
          target_commitish: ${{github.event.release.target_commitish}}
          desired_labels: 'app terraform'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # sets individual outputs from the json
      - name: Extract release type
        id: extract_release_type
        run: |
          labels_json=$(echo '${{ steps.get_release_type.outputs.found_labels }}' | jq .)
          echo $labels_json
      
          # Loop over the keys in the JSON object.
          for key in $(echo $labels_json | jq -r 'keys[]'); do
            # Get the value associated with the key.
            value=$(echo $labels_json | jq -r --arg key "$key" '.[$key]')
      
            # Add a new output for the label.
            echo "has_${key}_label=$value" >> $GITHUB_OUTPUT
          done

      # Deploying/analyzing depending on release type
      - name: Deploy Terraform
        if: steps.extract_release_type.outputs.has_terraform_label == 'true'
        run: echo "Deploying Terraform..."
      
      - name: Deploy app
        if: steps.extract_release_type.outputs.has_app_label == 'true'
        run: echo "Deploying app..."

  test:
    name: test
    runs-on: ubuntu-latest
    needs: [ deploy ]
    steps:
      - name: test
        run: |
          echo "print outputs"
          echo ${{needs.deploy.outputs.is_terragrunt_release}}
          echo ${{needs.deploy.outputs.is_app_release}}

      - name: print commitish and sha
        run: |
          echo ${{ github.event.release.target_commitish }}
          echo ${{ github.sha }}
