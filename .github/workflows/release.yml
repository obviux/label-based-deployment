name: Release management app

on:
  push:
    branches:
      - master

jobs:
  release-management:
    runs-on: ubuntu-latest
    concurrency: release
    outputs:
      is_terragrunt_release: ${steps.path_filters.outputs.terragrunt == 'true'}
      is_app_release: ${steps.path_filters.outputs.all_count > steps.path_filters.outputs.app-ignore-list_count}
      service_image_tag: ${{ steps.release.outputs.sha }}
    steps:
      #Maintain same release please pipeline
      - name: Manage release
        uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.ME_BOT_TOKEN }}
          release-type: simple
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Miscellaneous","hidden":false}, {"type":"refactor","section":"Miscellaneous","hidden":false}]'

      #Checkcs out repo to find bas script. Only runs this flow if creating/updating release pr.
      - name: Checkout code
        if: steps.release.outputs.pr != ''
        uses: actions/checkout@v2

      - name: print stuff
        run: |
          echo "printing sha and pr"
          echo ${{ steps.release.outputs.sha }}
          echo ${{ steps.release.outputs.pr }}

      - name: Get PR number
        if: steps.release.outputs.pr != ''
        uses: obviux/get_pr_number@v1.0.4
        id: get_pr_number 
        with:
          pr_string: ${{ steps.release.outputs.pr }}

      #Creating outputs depending on changed paths
      - name: Path filters
        if: steps.release.outputs.pr != ''
        uses: dorny/paths-filter@v2
        id: path_filters
        with:
          filters: |
            all:
              - '**'
            terraform:
              - 'terraform/**'
              - '.github/**'
            app-ignore-list:
              - 'CHANGELOG.md'
              - 'README.md'
              - 'version.txt'
              - 'terraform/**'

      #Lable based on changed paths
      - name: Label as app
        if: steps.release.outputs.pr != '' && steps.path_filters.outputs.all_count > steps.path_filters.outputs.app-ignore-list_count #If there are any changes that ar not on the ignore list
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: ${{ steps.get_pr_number.outputs.pr_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["app"]
            })
          retries: 1

      - name: Label as terraform
        if: steps.release.outputs.pr != '' && steps.path_filters.outputs.terraform == 'true' #If there are any terraform or deployment changes
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: ${{ steps.get_pr_number.outputs.pr_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["terraform"]
            })
          retries: 1
          
  tests:
    runs-on: ubuntu-latest
    needs: [ release-management ]
    steps:
      - name: Print stuff
        run: |
          echo "is_terragrunt_release ${{ needs.release-management.outputs.is_terragrunt_release }}"
          echo "is_app_release ${{ needs.release-management.outputs.is_app_release }}"
          echo "service_image_tag ${{ needs.release-management.outputs.service_image_tag }}"
